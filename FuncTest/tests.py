from selenium import webdriver
#import unittest
from selenium.webdriver.common.keys import Keys 
import time
from django.test import LiveServerTestCase
from selenium.common.exceptions import WebDriverException

cWait = 3
class PageTest(LiveServerTestCase):
	
	def setUp (self):
		self.browser = webdriver.Firefox()

	def teardown(self):
		self.browser.quit()

	#def test_browser_title(self):
	#	self.browser.get('http://localhost:8000')
	#	self.assertIn('CoVid-19 Enhanced Local Travel Registration', self.browser.title)
	#	self.fail('Finish the Test!')

	def wait_rows_in_listtable(self, row_text):
		start_time = time.time()
		while time.time()-start_time<cWait:
			time.sleep(0.1)
			try:
				table = self.browser.find_element_by_id('inList')
				rows = table.find_elements_by_tag_name('tr')
				self.assertIn(row_text, [row.text for row in rows])
				return
			except (AssertionError, WebDriverException) as e:
				if time.time()-start_time>cWait:
					raise e

	def test_start_list_one_user(self):
		self.browser.get(self.live_server_url)
		self.assertIn('New Normal PH', self.browser.title)
		headerText = self.browser.find_element_by_tag_name('h1').text
		self.assertIn('Inter-Provincial Tourist Destination Tracker', headerText)
		inName = self.browser.find_element_by_id('idName')
		inName.click()
		inName.send_keys('Edgardo Epifanio')
		time.sleep(.1)
		inEmail = self.browser.find_element_by_id('idEmail')
		inEmail.click()
		inEmail.send_keys('epifanio.edgardo99@gmail.com')
		time.sleep(.1)
		inCode = self.browser.find_element_by_id('idUniCode')
		inCode.click()
		inCode.send_keys('DHG-852LKJ-CXV')
		time.sleep(.1)
		inOrigin = self.browser.find_element_by_id('idOrigin')
		inOrigin.click()
		inOrigin.send_keys('Imus, Cavite')
		time.sleep(.1)
		inDes = self.browser.find_element_by_id('idDestination')
		inDes.click()
		inDes.send_keys('Palawan')
		time.sleep(.1)
		inPurpose = self.browser.find_element_by_id('idPurpose')
		inPurpose.click()
		inPurpose.send_keys('Business Meeting')
		inComp = self.browser.find_element_by_id('idComp')
		inComp.click()
		inComp.send_keys('No')
		time.sleep(.1)
		inEmail = self.browser.find_element_by_id('idPets')
		inEmail.click()
		inEmail.send_keys('No')
		time.sleep(.1)
		inDes = self.browser.find_element_by_id('idHistory')
		inDes.click()
		inDes.send_keys('Imus Lumina')
		time.sleep(.1)
		btnCon = self.browser.find_element_by_id('btnConfirm')
		btnCon.click()
		self.wait_rows_in_listtable('1: Edgardo Epifanio')
		#
		time.sleep(.1)
		inName = self.browser.find_element_by_id('idName')
		inName.click()
		inName.send_keys('Mariella Arida')
		time.sleep(.1)
		inEmail = self.browser.find_element_by_id('idEmail')
		inEmail.click()
		inEmail.send_keys('maye99@gmail.com')
		time.sleep(.1)
		inCode = self.browser.find_element_by_id('idUniCode')
		inCode.click()
		inCode.send_keys('HJG-7854P-741')
		time.sleep(.1)
		inOrigin = self.browser.find_element_by_id('idOrigin')
		inOrigin.click()
		inOrigin.send_keys('Dasmarinas City, Cavite')
		time.sleep(.1)
		inDes = self.browser.find_element_by_id('idDestination')
		inDes.click()
		inDes.send_keys('Boracay')
		time.sleep(.1)
		inPurpose = self.browser.find_element_by_id('idPurpose')
		inPurpose.click()
		inPurpose.send_keys('Emergency Purpose')
		inComp = self.browser.find_element_by_id('idComp')
		inComp.click()
		inComp.send_keys('Yes, Mother')
		time.sleep(.1)
		inEmail = self.browser.find_element_by_id('idPets')
		inEmail.click()
		inEmail.send_keys('No')
		time.sleep(.1)
		inDes = self.browser.find_element_by_id('idHistory')
		inDes.click()
		inDes.send_keys('Barangay Salitran Health Center')
		time.sleep(.1)
		btnCon = self.browser.find_element_by_id('btnConfirm')
		btnCon.click()
		self.wait_rows_in_listtable('2: Mariella Arida')
		# self.wait_rows_in_listtable('1: Tanay Textile Market')
		# self.wait_rows_in_listtable("2: Filomena Sanchez") # HGF-523PKL-PKN Cebu")
		#table = self.browser.find_element_by_id('listTable')
		#rows = table.find_elements_by_tag_name('tr')
		#self.assertIn('chuchu', [row.text for row in rows])
		#self.assertIn('1: Edgardo Epifanio (DHG-852LKJ-CXV) from Palawan', [row.text for row in rows])
		#self.assertIn('2: Leona Krookroo (WRT-JHA852-KLN) from Cebu', [row.text for row in rows])
		#return
		#self.fail('Finish the Test!')
	def test_multiple_users_can_start_lists_at_different_urls(self):
		self.browser.get(self.live_server_url)
		time.sleep(.1)
		inName = self.browser.find_element_by_id('idName')
		inName.click()
		inName.send_keys('Christian Dior')
		time.sleep(.1)
		inEmail = self.browser.find_element_by_id('idEmail')
		inEmail.click()
		inEmail.send_keys('chrisdior@gmail.com')
		time.sleep(.1)
		inCode = self.browser.find_element_by_id('idUniCode')
		inCode.click()
		inCode.send_keys('SDG-796PL-O54')
		time.sleep(.1)
		inOrigin = self.browser.find_element_by_id('idOrigin')
		inOrigin.click()
		inOrigin.send_keys('Makati City')
		time.sleep(.1)
		inDes = self.browser.find_element_by_id('idDestination')
		inDes.click()
		inDes.send_keys('El Nido')
		time.sleep(.1)
		inPurpose = self.browser.find_element_by_id('idPurpose')
		inPurpose.click()
		inPurpose.send_keys('Photoshoot')
		inComp = self.browser.find_element_by_id('idComp')
		inComp.click()
		inComp.send_keys('Yes, Handler and Makeup Artist')
		time.sleep(.1)
		inEmail = self.browser.find_element_by_id('idPets')
		inEmail.click()
		inEmail.send_keys('Yes')
		time.sleep(.1)
		inDes = self.browser.find_element_by_id('idHistory')
		inDes.click()
		inDes.send_keys('Makati Business District')
		time.sleep(.1)
		btnCon = self.browser.find_element_by_id('btnConfirm')
		btnCon.click()
		self.wait_rows_in_listtable('1: Christian Dior')
		#first unique URL
		listview_url = self.browser.current_url
		self.assertRegex(listview_url, '/OpenTourList/.+')
		#New Browser Session
		self.browser.quit()
		self.browser = webdriver.Firefox()

		self.browser.get(self.live_server_url)
		text_page = self.browser.find_element_by_tag_name('body').text
		self.assertNotIn('Christian Dior', text_page)

		time.sleep(.1)
		inName = self.browser.find_element_by_id('idName')
		inName.click()
		inName.send_keys('Wanda Maximoff')
		time.sleep(.1)
		inEmail = self.browser.find_element_by_id('idEmail')
		inEmail.click()
		inEmail.send_keys('scarlettwitch@gmail.com')
		time.sleep(.1)
		inCode = self.browser.find_element_by_id('idUniCode')
		inCode.click()
		inCode.send_keys('785-OPKHG-741')
		time.sleep(.1)
		inOrigin = self.browser.find_element_by_id('idOrigin')
		inOrigin.click()
		inOrigin.send_keys('WestVille')
		time.sleep(.1)
		inDes = self.browser.find_element_by_id('idDestination')
		inDes.click()
		inDes.send_keys('New Avengers HQ')
		time.sleep(.1)
		inPurpose = self.browser.find_element_by_id('idPurpose')
		inPurpose.click()
		inPurpose.send_keys('Training')
		inComp = self.browser.find_element_by_id('idComp')
		inComp.click()
		inComp.send_keys('Yes, Vision')
		time.sleep(.1)
		inEmail = self.browser.find_element_by_id('idPets')
		inEmail.click()
		inEmail.send_keys('No')
		time.sleep(.1)
		inDes = self.browser.find_element_by_id('idHistory')
		inDes.click()
		inDes.send_keys('WestVille Market')
		time.sleep(.1)
		btnCon = self.browser.find_element_by_id('btnConfirm')
		btnCon.click()
		self.wait_rows_in_listtable('1: Wanda Maximoff')
		
		#second unique URL
		userview2_url = self.browser.current_url
		self.assertRegex(userview2_url, '/OpenTourList/.+')
		self.assertNotEqual(userview2_url, listview_url)
		text_page = self.browser.find_element_by_tag_name('body').text
		self.assertNotIn('Christian Dior', text_page)
		self.assertIn('Wanda Maximoff', text_page)

# if __name__== '__main__':
# 	unittest.main(warnings='ignore')  

#def teardown(self):
	#	self.browser.quit()

	#def test_browser_title(self):
	#	self.browser.get('http://localhost:8000')
	#	self.assertIn('CoVid-19 Enhanced Local Travel Registration', self.browser.title)
	#	self.fail('Finish the Test!')
	

#browser = webdriver.Firefox()
# browser.get('http://127.0.0.8000')